buildscript {
    dependencies {
        //region <default grails build script dependencies>
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.0"
        classpath "org.grails.plugins:hibernate5:7.0.4"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.2.4"
        //endregion
    }
}

version "4.1"
group "grails.springfox.sample"

//region <default grails plugins>
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "war"
apply plugin: "org.grails.grails-web"
apply plugin: "com.github.erdi.webdriver-binaries"
apply plugin: "com.bertramlabs.asset-pipeline"
apply plugin: "org.grails.grails-gsp"
//endregion

repositories {
    mavenLocal()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    dependencies {
        dependency("io.rest-assured:rest-assured:$restAssured")
        dependency("org.skyscreamer:jsonassert:$jsonAssert")
        dependency("io.rest-assured:json-path:$restAssured")
        dependency("org.seleniumhq.selenium:selenium-htmlunit-driver:2.52.0")
        dependency("net.sourceforge.htmlunit:htmlunit:$htmlUnit")
        dependency("io.springfox:springfox-swagger2:${springfox}")
        dependency("io.springfox:springfox-swagger-ui:${springfox}")
        dependency("org.grails.plugins:cache:5.0.1")
        dependency('org.objenesis:objenesis:3.2')
        dependency("org.glassfish.web:el-impl:2.1.2-b03")
        dependency("org.postgresql:postgresql:42.3.5")
    }
    applyMavenExclusions false
}
// configurations.all {
//     exclude group: 'org.reactivestreams', module: 'reactive-streams'
// }

dependencies {

    compile project(":springfox-grails")

    //region <default grails dependencies>
    developmentOnly "org.springframework.boot:spring-boot-devtools"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core"
    compile "org.grails.plugins:gsp"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:rest-api"
    runtime "org.glassfish.web:el-impl"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "javax.xml.bind:jaxb-api"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails"
    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.seleniumhq.selenium:selenium-remote-driver"
    testCompile "org.seleniumhq.selenium:selenium-api"
    testCompile "org.seleniumhq.selenium:selenium-support"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver"
    //endregion

    compile "io.springfox:springfox-swagger2"
    compile "io.springfox:springfox-swagger-ui"

    //region <required for json testing>
    testCompile "io.rest-assured:rest-assured"
    testCompile "io.rest-assured:json-path"
    testCompile "org.skyscreamer:jsonassert"
    //endregion

    if (project.hasProperty('heroku')) {
        compile 'org.postgresql:postgresql'
    }
}
//region <default grails tasks>
bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always',
        '-noverify',
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

webdriverBinaries {
    chromedriver '2.45.0'
    geckodriver '0.24.0'
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}


assets {
    minifyJs = true
    minifyCss = true
}
//endregion

springBoot {
    mainClassName = 'grails.springfox.sample.Application'
}
